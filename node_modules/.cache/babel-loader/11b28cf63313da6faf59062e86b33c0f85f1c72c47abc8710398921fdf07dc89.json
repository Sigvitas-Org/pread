{"ast":null,"code":"import _regeneratorRuntime from\"/workspaces/pread/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"/workspaces/pread/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/workspaces/pread/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/workspaces/pread/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import\"./App.css\";import mammoth from\"mammoth\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),fileName=_useState2[0],setFileName=_useState2[1];var _useState3=useState(\"NA\"),_useState4=_slicedToArray(_useState3,2),crossWord=_useState4[0],setCrossWord=_useState4[1];var _useState5=useState(\"NA\"),_useState6=_slicedToArray(_useState5,2),fieldWord=_useState6[0],setFieldWord=_useState6[1];var _useState7=useState(\"NA\"),_useState8=_slicedToArray(_useState7,2),backgroundWord=_useState8[0],setBackgroundWord=_useState8[1];var _useState9=useState(\"NA\"),_useState10=_slicedToArray(_useState9,2),summaryWord=_useState10[0],setSummaryWord=_useState10[1];var _useState11=useState(\"NA\"),_useState12=_slicedToArray(_useState11,2),drofDraWord=_useState12[0],setDroofDraWord=_useState12[1];var _useState13=useState(\"NA\"),_useState14=_slicedToArray(_useState13,2),detaDesWord=_useState14[0],setDetaDesWord=_useState14[1];var _useState15=useState(\"NA\"),_useState16=_slicedToArray(_useState15,2),claimedWord=_useState16[0],setClaimedWord=_useState16[1];var _useState17=useState(\"NA\"),_useState18=_slicedToArray(_useState17,2),abstractWord=_useState18[0],setAbstractWord=_useState18[1];var _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),fileContent=_useState20[0],setFileContent=_useState20[1];var _useState21=useState([]),_useState22=_slicedToArray(_useState21,2),sections=_useState22[0],setSections=_useState22[1];var _useState23=useState(\"\"),_useState24=_slicedToArray(_useState23,2),errorMessage=_useState24[0],setErrorMessage=_useState24[1];var _useState25=useState(false),_useState26=_slicedToArray(_useState25,2),showFileContent=_useState26[0],setShowFileContent=_useState26[1];var _useState27=useState(\"NA\"),_useState28=_slicedToArray(_useState27,2),modifiedTitle=_useState28[0],setModifiedTitle=_useState28[1];var _useState29=useState(\"\"),_useState30=_slicedToArray(_useState29,2),originalTitle=_useState30[0],setOriginalTitle=_useState30[1];var _useState31=useState(0),_useState32=_slicedToArray(_useState31,2),wordCount=_useState32[0],setWordCount=_useState32[1];var _useState33=useState(0),_useState34=_slicedToArray(_useState33,2),imgCount=_useState34[0],setImgCount=_useState34[1];var _useState35=useState(0),_useState36=_slicedToArray(_useState35,2),totalclaims=_useState36[0],setTotalClaims=_useState36[1];var _useState37=useState(0),_useState38=_slicedToArray(_useState37,2),independentClaims=_useState38[0],setIndependentClaims=_useState38[1];var _useState39=useState(0),_useState40=_slicedToArray(_useState39,2),dependentClaims=_useState40[0],setDependentClaims=_useState40[1];var _useState41=useState(0),_useState42=_slicedToArray(_useState41,2),dependentClaimNumbers=_useState42[0],setDependentClaimNumbers=_useState42[1];var _useState43=useState(0),_useState44=_slicedToArray(_useState43,2),paragraphsInClaims=_useState44[0],setParagraphsInClaims=_useState44[1];var _useState45=useState(0),_useState46=_slicedToArray(_useState45,2),paragraphCount=_useState46[0],setParagraphCount=_useState46[1];var _useState47=useState(0),_useState48=_slicedToArray(_useState47,2),dependent=_useState48[0],setdependent=_useState48[1];var _useState49=useState(0),_useState50=_slicedToArray(_useState49,2),independent=_useState50[0],setIndependent=_useState50[1];var _useState51=useState(0),_useState52=_slicedToArray(_useState51,2),total=_useState52[0],setTotal=_useState52[1];var _useState53=useState(0),_useState54=_slicedToArray(_useState53,2),sentenceCount=_useState54[0],setSentenceCount=_useState54[1];var _useState55=useState(0),_useState56=_slicedToArray(_useState55,2),lineCount=_useState56[0],setLineCount=_useState56[1];var _useState57=useState(false),_useState58=_slicedToArray(_useState57,2),showClaimContent=_useState58[0],setShowClaimContent=_useState58[1];var _useState59=useState(\"\"),_useState60=_slicedToArray(_useState59,2),independentClaimLists=_useState60[0],setIndependentClaimLists=_useState60[1];var _useState61=useState(\"\"),_useState62=_slicedToArray(_useState61,2),dependentClaimLists=_useState62[0],setDependentClaimLists=_useState62[1];var _useState63=useState(false),_useState64=_slicedToArray(_useState63,2),showQr=_useState64[0],setShowQr=_useState64[1];var handleFileChange=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e){var file,fileWithdep,filename,reader;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:file=e.target.files[0];fileWithdep=e.target.files[0].name;filename=fileWithdep.replace(\".docx\",\"\");setFileName(filename);if(file){_context2.next=7;break;}setErrorMessage(\"Please select a file.\");return _context2.abrupt(\"return\");case 7:reader=new FileReader();reader.onload=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var content,result,text,titleRegx,titlesec,titlenames,titlename,wordss,crossregex,crosssec,crosssection,filteredContentforCrossSection,wordsForCross,crosswordCount,fieldregex,fieldsec,fieldsection,filteredContentforFieldSection,wordsForField,fieldWordCount,backgrdregex,backgrdsec,backgrdsection,filteredContentforBackgrdSection,wordsForBackground,backgrdWordCount,summregex,summsec,summsection,filteredContentforSumarySection,wordsForSummary,summaryWordCount,dodregex,dodsec,dodsection,filteredContentforDodSection,wordsForDod,dodWordCount,detDesregex,detDessec,detDessection,filteredContentforDetDesSection,wordsForDetDes,detDesWordCount,claimregex,claimsec,claimsection,linesa,filteredLines,independentClaimCount,dependentClaimCount,_independentClaims,_dependentClaims,i,line,words,_wordCount,filteredContentforClaimSection,wordsForDetClaim,claimWordCount,abstractregex,abssec,abssection,filteredContentforAbstractSection,wordsForDetAbs,absWordCount,figRegex,descriptionMatches,descriptionText,imageRegex1,matches,uniqueMatches,matchesWithoutanyWord,Rx1,figsRomanRegex,matches2,unique,Rx2,totalFigs,imageRegex,matches1,uniqueMatches1,a;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:content=e.target.result;_context.prev=1;_context.next=4;return mammoth.extractRawText({arrayBuffer:content});case 4:result=_context.sent;text=result.value;titleRegx=/([\\s\\S]*?)(cross-reference to related application|CROSS|Cross|CROSS REFERENCE TO RELATED APPLICATIONS|What is claimed is|Claims|CLAIMS|WHAT IS CLAIMED IS|abstract|ABSTRACT|Cross-reference to related application|CROSS-REFERENCE TO RELATED APPLICATION|field|background|summary|description of the drawing|$)/i;titlesec=titleRegx.exec(text);if(titlesec){titlenames=titlesec[1];titlename=titlenames.replace(/\\[\\d+\\]/g,\"\");wordss=titlename.split(/\\s+/).filter(Boolean);setWordCount(wordss.length);setModifiedTitle(titlename);}crossregex=/(?:CROSS-REFERENCE TO RELATED APPLICATION|CROSS REFERENCE TO RELATED APPLICATION|Cross-reference to related application|Cross-Reference To Related Application|Related Applications)([\\s\\S]*?)(?:TECHNICAL FIELD|FIELD|Field|Background|BACKGROUND|Summary|SUMMARY|DESCRIPTION OF (?: THE) DRAWING|Description Of(?: The)? Drawing|DETAILED DESCRIPTION|WHAT IS CLAIMED IS|ABSTRACT|$)/;crosssec=crossregex.exec(text);if(crosssec){crosssection=crosssec[1];filteredContentforCrossSection=crosssection.replace(/\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\"\");wordsForCross=filteredContentforCrossSection.split(/\\s+/).filter(Boolean);crosswordCount=wordsForCross.length;setCrossWord(crosswordCount);console.log(\"aea\",crosswordCount);}fieldregex=/(?:FIELD|TECHNICAL FIELD|FIELD OF THE INVENTION|Field|Technical Field)([\\s\\S]*?)(?:BACKGROUND|Background|BRIEF DESCRIPTION OF THE INVENTION|Summary|SUMMARY|DESCRIPTION OF (?: THE) DRAWING|Description of (?: the) Drawing|DETAILED DESCRIPTION|detailed description|What is claimed is|CLAIMS|Abstract|ABSTRACT|CROSS-REFERENCE TO RELATED APPLICATION|$)/;fieldsec=fieldregex.exec(text);if(fieldsec){fieldsection=fieldsec[1];filteredContentforFieldSection=fieldsection.replace(/\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\"\");wordsForField=filteredContentforFieldSection.split(/\\s+/).filter(Boolean);fieldWordCount=wordsForField.length;setFieldWord(fieldWordCount);console.log(\"fiel\",fieldWordCount);}backgrdregex=/(?:background|background of the invention)([\\s\\S]*?)(?:summary|brief description of the invention|description of (?: the) drawings|detailed description|what is claimed is|abstract|cross-reference to related application|field|$)/i;backgrdsec=backgrdregex.exec(text);if(backgrdsec){backgrdsection=backgrdsec[1];filteredContentforBackgrdSection=backgrdsection.replace(/\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\"\");wordsForBackground=filteredContentforBackgrdSection.split(/\\s+/).filter(Boolean);backgrdWordCount=wordsForBackground.length;setBackgroundWord(backgrdWordCount);console.log(\"back\",backgrdWordCount);}summregex=/(?:SUMMARY|BRIEF DESCRIPTION OF THE INVENTION|BRIEF SUMMARY)([\\s\\S]*?)(?:DESCRIPTION OF (?: THE)? DRAWINGS|BRIEF DESCRIPTION OF DRAWINGS|detailed description|what is claimed is|claims|abstract|cross-reference to related application|field|background|$)/i;summsec=summregex.exec(text);if(summsec){summsection=summsec[1];filteredContentforSumarySection=summsection.replace(/\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\"\");wordsForSummary=filteredContentforSumarySection.split(/\\s+/).filter(Boolean);summaryWordCount=wordsForSummary.length;setSummaryWord(summaryWordCount);console.log(\"sum\",summaryWordCount);}dodregex=/(?:Description of(?: the)? Drawings|DESCRIPTION OF(?: THE)? DRAWINGS)([\\s\\S]*?)(?:DETAILED DESCRIPTION|\\nDetailed Description|DESCRIPTION OF EMBODIMENTS|DESCRIPTION OF IMPLEMENTATIONS|DETAILED DESCRIPTION OF SPECIFIC EMBODIMENTS|What is claimed is|CLAIMS|ABSTRACT|CROSS-REFERENCE TO RELATED APPLICATION|FIELD|BACKGROUND|SUMMARY|BRIEF DESCRIPTION THE INVENTION|$)/;dodsec=dodregex.exec(text);if(dodsec){dodsection=dodsec[1];filteredContentforDodSection=dodsection.replace(/\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\"\");wordsForDod=filteredContentforDodSection.split(/\\s+/).filter(Boolean);dodWordCount=wordsForDod.length;setDroofDraWord(dodWordCount);console.log(\"dod\",dodWordCount);}detDesregex=/(?:\\nDetailed Description|DETAILED DESCRIPTION|DESCRIPTION OF EMBODIMENTS|DESCRIPTION OF IMPLEMENTATIONS|DETAILED DESCRIPTION OF SPECIFIC EMBODIMENTS)([\\s\\S]*?)(?:What is claimed is|Claims|WHAT IS CLAIMED IS|CLAIMS|abstract|ABSTRACT|Cross-reference to related application|CROSS-REFERENCE TO RELATED APPLICATION|FIELD|BACKGROUND|SUMMARY|$)/;detDessec=detDesregex.exec(text);if(detDessec){detDessection=detDessec[1];filteredContentforDetDesSection=detDessection.replace(/\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\"\");wordsForDetDes=filteredContentforDetDesSection.split(/\\s+/).filter(Boolean);detDesWordCount=wordsForDetDes.length;setDetaDesWord(detDesWordCount);console.log(\"det\",detDesWordCount);}claimregex=/(?:What is claimed is|Claims|CLAIMS|WHAT IS CLAIMED IS)([\\s\\S]*?)(?:abstract|ABSTRACT|Related Applications|Cross-reference to related application|CROSS-REFERENCE TO RELATED APPLICATION|FIELD|Field|BACKGROUND|SUMMARY|$)/;claimsec=claimregex.exec(text);if(claimsec){claimsection=claimsec[1];linesa=claimsection.split(/(?<=\\.)\\s+/).filter(function(line){return line.includes(\".\");});filteredLines=linesa.filter(function(line){return line.trim().length>=40&&!/^\\s*[\\d\\n\\t\\s]+\\.?$|^:\\s*\\n{1,10}CLAIMS\\s*\\n{1,10}1\\./.test(line);});console.log(\"claims\",linesa);console.log(\"claims1\",filteredLines);independentClaimCount=0;dependentClaimCount=0;_independentClaims=[];_dependentClaims=[];for(i=0;i<filteredLines.length;i++){line=filteredLines[i];words=line.split(/\\s+/).filter(Boolean);_wordCount=words.length;if(/claim\\s+(\\d+)/i.test(line)){_dependentClaims.push(\"claim \".concat(i+1,\" - \").concat(_wordCount,\" words\"));dependentClaimCount++;}else{_independentClaims.push(\"claim \".concat(i+1,\" - \").concat(_wordCount,\" words\"));independentClaimCount++;}}setTotal(filteredLines.length);setIndependent(independentClaimCount);setdependent(dependentClaimCount);setIndependentClaimLists(_independentClaims.join(\"\\n\"));setDependentClaimLists(_dependentClaims.join(\"\\n \"));filteredContentforClaimSection=claimsection.replace(/\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\"\");wordsForDetClaim=filteredContentforClaimSection.split(/\\s+/).filter(Boolean);claimWordCount=wordsForDetClaim.length;setClaimedWord(claimWordCount);console.log(\"claim\",claimWordCount);}abstractregex=/(?: Abstract|ABSTRACT)([\\s\\S]*?)(?:What is claimed is|Claims|CLAIMS|CROSS-REFERENCE |cross-reference to related application|field|background|summary|description of the drawing|$)/;abssec=abstractregex.exec(text);if(abssec){abssection=abssec[1];filteredContentforAbstractSection=abssection.replace(/\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\"\");wordsForDetAbs=filteredContentforAbstractSection.split(/\\s+/).filter(Boolean);absWordCount=wordsForDetAbs.length;setAbstractWord(absWordCount);console.log(\"abs\",absWordCount);}figRegex=/(?:Description of(?: the)? Drawings|DESCRIPTION OF(?: THE)? DRAWINGS)([\\s\\S]*?)(?:DETAILED DESCRIPTION|\\nDetailed Description|DESCRIPTION OF EMBODIMENTS|DESCRIPTION OF IMPLEMENTATIONS|DETAILED DESCRIPTION OF SPECIFIC EMBODIMENTS|What is claimed is|CLAIMS|ABSTRACT|CROSS-REFERENCE TO RELATED APPLICATION|FIELD|BACKGROUND|SUMMARY|BRIEF DESCRIPTION THE INVENTION|$)/;descriptionMatches=figRegex.exec(text);debugger;if(descriptionMatches){descriptionText=descriptionMatches[1];imageRegex1=/(?:FIG(?:URE)?)\\.?[-\\s]?(?:\\d+|[IVXLCDM]+)[A-Z]?(?:\\([\\w\\s]+\\))?\\b/gi;matches=descriptionText.match(imageRegex1);uniqueMatches=_toConsumableArray(new Set(matches));matchesWithoutanyWord=uniqueMatches.filter(function(match){return!/\\bfigured\\b/i.test(match)&&!/\\bfiguring\\b/i.test(match);});Rx1=matchesWithoutanyWord.length;figsRomanRegex=/FIGS(?:URES?)?\\.\\s(?:\\d+|[IVXLCDM]+)(?:[A-Za-z]?(?:\\sAND\\s(?:\\d+|[IVXLCDM]+)[A-Za-z]?)+)?/i;matches2=descriptionText.match(figsRomanRegex);unique=_toConsumableArray(new Set(matches2));console.log(\"aaa\",unique);Rx2=unique.length*2;totalFigs=Rx1+Rx2;setImgCount(totalFigs);imageRegex=/FIGS\\.\\s?\\d+([A-Za-z\\(\\)]+)?\\s?(?:to(?!.*and)|-(?!.*and))\\s?\\d+([A-Za-z\\(\\)]+)?/gi;//without and\ndebugger;matches1=descriptionText.match(imageRegex);uniqueMatches1=_toConsumableArray(new Set(matches1));console.log(\"jii\",uniqueMatches1);}setFileContent(text);setSentenceCount(text.split(\".\").length);setLineCount(text.split(\"\\n\").length);a=text.split(\"\\n\");setLineCount(a.length);setErrorMessage(\"\");_context.next=48;break;case 45:_context.prev=45;_context.t0=_context[\"catch\"](1);setErrorMessage(\"Error reading the .docx file.\");case 48:case\"end\":return _context.stop();}},_callee,null,[[1,45]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();reader.onerror=function(){setErrorMessage(\"Error reading the file.\");};reader.readAsArrayBuffer(file);case 11:case\"end\":return _context2.stop();}},_callee2);}));return function handleFileChange(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"div\",{style:{letterSpacing:0,top:0,width:\"100%\",backgroundColor:\"\",color:\"white\",padding:\"20px\",textAlign:\"center\"},children:/*#__PURE__*/_jsx(\"h1\",{children:\"Patent Reader\"})}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleFileChange}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:errorMessage}),/*#__PURE__*/_jsxs(\"div\",{className:\"result\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Title: \",modifiedTitle]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" Count of the Title :\",wordCount]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Cross-Reference Section: \",crossWord]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Field Section:\",fieldWord]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Background Section:\",backgroundWord]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Summary Section : \",summaryWord]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Description of Drawing : \",drofDraWord]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" Detailed Description : \",detaDesWord]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Claims Section :\",claimedWord]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Abstract Section : \",abstractWord]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total Number of Figures:\",imgCount]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total lines: \",lineCount]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total word count: \",fileContent.split(/\\s+/).filter(Boolean).length]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total character count: \",fileContent.replace(/\\s/g,\"\").length]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total sentence count: \",sentenceCount]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",marginTop:\"2%\"},children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return setShowFileContent(!showFileContent);},children:[showFileContent?\"hide\":\"view\",\" content\"]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return setShowClaimContent(!showClaimContent);},children:[showClaimContent?\"hide\":\"view\",\" Claims\"]})})]}),showFileContent&&/*#__PURE__*/_jsxs(\"div\",{className:\"file-content\",style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsxs(\"h2\",{style:{color:\"white\"},children:[\"File Content : \",\"  \"+fileName]}),/*#__PURE__*/_jsx(\"p\",{style:{whiteSpace:\"pre-wrap\",textAlign:\"left\",backgroundColor:\"white\",margin:\"0\"},children:fileContent.split(\"\\n\").reduce(function(acc,line){var trimmedLine=line.trim();var modifiedLine=trimmedLine.replace(/\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\"\");if(modifiedLine){acc.push(modifiedLine);}else if(!acc[acc.length-1]){return acc;}else{acc.push(\"\");}return acc;},[]).join(\"\\n\")})]}),showClaimContent&&/*#__PURE__*/_jsxs(\"div\",{className:\"claim-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"CLAIMS:\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total Claims:\",total]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Independent Claims:\",independent]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Dependent Claims:\",dependent]}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"Independent Claims List:\"})}),/*#__PURE__*/_jsx(\"pre\",{children:independentClaimLists}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"Dependent Claims:\"})}),/*#__PURE__*/_jsx(\"pre\",{children:dependentClaimLists})]})]});}export default App;","map":{"version":3,"names":["React","useState","mammoth","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","fileName","setFileName","_useState3","_useState4","crossWord","setCrossWord","_useState5","_useState6","fieldWord","setFieldWord","_useState7","_useState8","backgroundWord","setBackgroundWord","_useState9","_useState10","summaryWord","setSummaryWord","_useState11","_useState12","drofDraWord","setDroofDraWord","_useState13","_useState14","detaDesWord","setDetaDesWord","_useState15","_useState16","claimedWord","setClaimedWord","_useState17","_useState18","abstractWord","setAbstractWord","_useState19","_useState20","fileContent","setFileContent","_useState21","_useState22","sections","setSections","_useState23","_useState24","errorMessage","setErrorMessage","_useState25","_useState26","showFileContent","setShowFileContent","_useState27","_useState28","modifiedTitle","setModifiedTitle","_useState29","_useState30","originalTitle","setOriginalTitle","_useState31","_useState32","wordCount","setWordCount","_useState33","_useState34","imgCount","setImgCount","_useState35","_useState36","totalclaims","setTotalClaims","_useState37","_useState38","independentClaims","setIndependentClaims","_useState39","_useState40","dependentClaims","setDependentClaims","_useState41","_useState42","dependentClaimNumbers","setDependentClaimNumbers","_useState43","_useState44","paragraphsInClaims","setParagraphsInClaims","_useState45","_useState46","paragraphCount","setParagraphCount","_useState47","_useState48","dependent","setdependent","_useState49","_useState50","independent","setIndependent","_useState51","_useState52","total","setTotal","_useState53","_useState54","sentenceCount","setSentenceCount","_useState55","_useState56","lineCount","setLineCount","_useState57","_useState58","showClaimContent","setShowClaimContent","_useState59","_useState60","independentClaimLists","setIndependentClaimLists","_useState61","_useState62","dependentClaimLists","setDependentClaimLists","_useState63","_useState64","showQr","setShowQr","handleFileChange","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","e","file","fileWithdep","filename","reader","wrap","_callee2$","_context2","prev","next","target","files","name","replace","abrupt","FileReader","onload","_ref2","_callee","content","result","text","titleRegx","titlesec","titlenames","titlename","wordss","crossregex","crosssec","crosssection","filteredContentforCrossSection","wordsForCross","crosswordCount","fieldregex","fieldsec","fieldsection","filteredContentforFieldSection","wordsForField","fieldWordCount","backgrdregex","backgrdsec","backgrdsection","filteredContentforBackgrdSection","wordsForBackground","backgrdWordCount","summregex","summsec","summsection","filteredContentforSumarySection","wordsForSummary","summaryWordCount","dodregex","dodsec","dodsection","filteredContentforDodSection","wordsForDod","dodWordCount","detDesregex","detDessec","detDessection","filteredContentforDetDesSection","wordsForDetDes","detDesWordCount","claimregex","claimsec","claimsection","linesa","filteredLines","independentClaimCount","dependentClaimCount","_independentClaims","_dependentClaims","i","line","words","_wordCount","filteredContentforClaimSection","wordsForDetClaim","claimWordCount","abstractregex","abssec","abssection","filteredContentforAbstractSection","wordsForDetAbs","absWordCount","figRegex","descriptionMatches","descriptionText","imageRegex1","matches","uniqueMatches","matchesWithoutanyWord","Rx1","figsRomanRegex","matches2","unique","Rx2","totalFigs","imageRegex","matches1","uniqueMatches1","a","_callee$","_context","extractRawText","arrayBuffer","sent","value","exec","split","filter","Boolean","length","console","log","includes","trim","test","push","concat","join","match","_toConsumableArray","Set","t0","stop","_x2","apply","arguments","onerror","readAsArrayBuffer","_x","className","children","style","letterSpacing","top","width","backgroundColor","color","padding","textAlign","type","onChange","display","flexDirection","justifyContent","marginTop","onClick","whiteSpace","margin","reduce","acc","trimmedLine","modifiedLine"],"sources":["/workspaces/pread/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport mammoth from \"mammoth\";\n\nfunction App() {\n  const [fileName, setFileName] = useState();\n  const [crossWord, setCrossWord] = useState(\"NA\");\n  const [fieldWord, setFieldWord] = useState(\"NA\");\n  const [backgroundWord, setBackgroundWord] = useState(\"NA\");\n  const [summaryWord, setSummaryWord] = useState(\"NA\");\n  const [drofDraWord, setDroofDraWord] = useState(\"NA\");\n  const [detaDesWord, setDetaDesWord] = useState(\"NA\");\n  const [claimedWord, setClaimedWord] = useState(\"NA\");\n  const [abstractWord, setAbstractWord] = useState(\"NA\");\n  const [fileContent, setFileContent] = useState(\"\");\n  const [sections, setSections] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showFileContent, setShowFileContent] = useState(false);\n  const [modifiedTitle, setModifiedTitle] = useState(\"NA\");\n  const [originalTitle, setOriginalTitle] = useState(\"\");\n  const [wordCount, setWordCount] = useState(0);\n  const [imgCount, setImgCount] = useState(0);\n  const [totalclaims, setTotalClaims] = useState(0);\n  const [independentClaims, setIndependentClaims] = useState(0);\n  const [dependentClaims, setDependentClaims] = useState(0);\n  const [dependentClaimNumbers, setDependentClaimNumbers] = useState(0);\n  const [paragraphsInClaims, setParagraphsInClaims] = useState(0);\n  const [paragraphCount, setParagraphCount] = useState(0);\n  const [dependent, setdependent] = useState(0);\n  const [independent, setIndependent] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [sentenceCount, setSentenceCount] = useState(0);\n  const [lineCount, setLineCount] = useState(0);\n  const [showClaimContent, setShowClaimContent] = useState(false);\n  const [independentClaimLists, setIndependentClaimLists] = useState(\"\");\n  const [dependentClaimLists, setDependentClaimLists] = useState(\"\");\n  const [showQr, setShowQr] = useState(false);\n\n  const handleFileChange = async (e) => {\n    const file = e.target.files[0];\n    const fileWithdep = e.target.files[0].name;\n    const filename = fileWithdep.replace(\".docx\", \"\");\n    setFileName(filename);\n    if (!file) {\n      setErrorMessage(\"Please select a file.\");\n      return;\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = async (e) => {\n      const content = e.target.result;\n      try {\n        const result = await mammoth.extractRawText({ arrayBuffer: content });\n        const text = result.value;\n\n        const titleRegx =\n          /([\\s\\S]*?)(cross-reference to related application|CROSS|Cross|CROSS REFERENCE TO RELATED APPLICATIONS|What is claimed is|Claims|CLAIMS|WHAT IS CLAIMED IS|abstract|ABSTRACT|Cross-reference to related application|CROSS-REFERENCE TO RELATED APPLICATION|field|background|summary|description of the drawing|$)/i;\n        const titlesec = titleRegx.exec(text);\n        if (titlesec) {\n          const titlenames = titlesec[1];\n          const titlename = titlenames.replace(/\\[\\d+\\]/g, \"\");\n\n          const wordss = titlename.split(/\\s+/).filter(Boolean);\n          setWordCount(wordss.length);\n          setModifiedTitle(titlename);\n        }\n        const crossregex =\n          /(?:CROSS-REFERENCE TO RELATED APPLICATION|CROSS REFERENCE TO RELATED APPLICATION|Cross-reference to related application|Cross-Reference To Related Application|Related Applications)([\\s\\S]*?)(?:TECHNICAL FIELD|FIELD|Field|Background|BACKGROUND|Summary|SUMMARY|DESCRIPTION OF (?: THE) DRAWING|Description Of(?: The)? Drawing|DETAILED DESCRIPTION|WHAT IS CLAIMED IS|ABSTRACT|$)/;\n\n        const crosssec = crossregex.exec(text);\n        if (crosssec) {\n          const crosssection = crosssec[1];\n          const filteredContentforCrossSection = crosssection.replace(\n            /\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\n            \"\"\n          );\n          const wordsForCross = filteredContentforCrossSection\n            .split(/\\s+/)\n            .filter(Boolean);\n          const crosswordCount = wordsForCross.length;\n          setCrossWord(crosswordCount);\n          console.log(\"aea\", crosswordCount);\n        }\n\n        const fieldregex =\n          /(?:FIELD|TECHNICAL FIELD|FIELD OF THE INVENTION|Field|Technical Field)([\\s\\S]*?)(?:BACKGROUND|Background|BRIEF DESCRIPTION OF THE INVENTION|Summary|SUMMARY|DESCRIPTION OF (?: THE) DRAWING|Description of (?: the) Drawing|DETAILED DESCRIPTION|detailed description|What is claimed is|CLAIMS|Abstract|ABSTRACT|CROSS-REFERENCE TO RELATED APPLICATION|$)/;\n        const fieldsec = fieldregex.exec(text);\n        if (fieldsec) {\n          const fieldsection = fieldsec[1];\n          const filteredContentforFieldSection = fieldsection.replace(\n            /\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\n            \"\"\n          );\n          const wordsForField = filteredContentforFieldSection\n            .split(/\\s+/)\n            .filter(Boolean);\n          const fieldWordCount = wordsForField.length;\n          setFieldWord(fieldWordCount);\n          console.log(\"fiel\", fieldWordCount);\n        }\n\n        const backgrdregex =\n          /(?:background|background of the invention)([\\s\\S]*?)(?:summary|brief description of the invention|description of (?: the) drawings|detailed description|what is claimed is|abstract|cross-reference to related application|field|$)/i;\n        const backgrdsec = backgrdregex.exec(text);\n        if (backgrdsec) {\n          const backgrdsection = backgrdsec[1];\n          const filteredContentforBackgrdSection = backgrdsection.replace(\n            /\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\n            \"\"\n          );\n          const wordsForBackground = filteredContentforBackgrdSection\n            .split(/\\s+/)\n            .filter(Boolean);\n          const backgrdWordCount = wordsForBackground.length;\n          setBackgroundWord(backgrdWordCount);\n          console.log(\"back\", backgrdWordCount);\n        }\n\n        const summregex =\n          /(?:SUMMARY|BRIEF DESCRIPTION OF THE INVENTION|BRIEF SUMMARY)([\\s\\S]*?)(?:DESCRIPTION OF (?: THE)? DRAWINGS|BRIEF DESCRIPTION OF DRAWINGS|detailed description|what is claimed is|claims|abstract|cross-reference to related application|field|background|$)/i;\n        const summsec = summregex.exec(text);\n        if (summsec) {\n          const summsection = summsec[1];\n          const filteredContentforSumarySection = summsection.replace(\n            /\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\n            \"\"\n          );\n          const wordsForSummary = filteredContentforSumarySection\n            .split(/\\s+/)\n            .filter(Boolean);\n          const summaryWordCount = wordsForSummary.length;\n          setSummaryWord(summaryWordCount);\n          console.log(\"sum\", summaryWordCount);\n        }\n\n        const dodregex =\n          /(?:Description of(?: the)? Drawings|DESCRIPTION OF(?: THE)? DRAWINGS)([\\s\\S]*?)(?:DETAILED DESCRIPTION|\\nDetailed Description|DESCRIPTION OF EMBODIMENTS|DESCRIPTION OF IMPLEMENTATIONS|DETAILED DESCRIPTION OF SPECIFIC EMBODIMENTS|What is claimed is|CLAIMS|ABSTRACT|CROSS-REFERENCE TO RELATED APPLICATION|FIELD|BACKGROUND|SUMMARY|BRIEF DESCRIPTION THE INVENTION|$)/;\n        const dodsec = dodregex.exec(text);\n        if (dodsec) {\n          const dodsection = dodsec[1];\n          const filteredContentforDodSection = dodsection.replace(\n            /\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\n            \"\"\n          );\n          const wordsForDod = filteredContentforDodSection\n            .split(/\\s+/)\n            .filter(Boolean);\n          const dodWordCount = wordsForDod.length;\n          setDroofDraWord(dodWordCount);\n          console.log(\"dod\", dodWordCount);\n        }\n\n        const detDesregex =\n          /(?:\\nDetailed Description|DETAILED DESCRIPTION|DESCRIPTION OF EMBODIMENTS|DESCRIPTION OF IMPLEMENTATIONS|DETAILED DESCRIPTION OF SPECIFIC EMBODIMENTS)([\\s\\S]*?)(?:What is claimed is|Claims|WHAT IS CLAIMED IS|CLAIMS|abstract|ABSTRACT|Cross-reference to related application|CROSS-REFERENCE TO RELATED APPLICATION|FIELD|BACKGROUND|SUMMARY|$)/;\n\n        const detDessec = detDesregex.exec(text);\n        if (detDessec) {\n          const detDessection = detDessec[1];\n          const filteredContentforDetDesSection = detDessection.replace(\n            /\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\n            \"\"\n          );\n          const wordsForDetDes = filteredContentforDetDesSection\n            .split(/\\s+/)\n            .filter(Boolean);\n          const detDesWordCount = wordsForDetDes.length;\n          setDetaDesWord(detDesWordCount);\n          console.log(\"det\", detDesWordCount);\n        }\n\n        const claimregex =\n          /(?:What is claimed is|Claims|CLAIMS|WHAT IS CLAIMED IS)([\\s\\S]*?)(?:abstract|ABSTRACT|Related Applications|Cross-reference to related application|CROSS-REFERENCE TO RELATED APPLICATION|FIELD|Field|BACKGROUND|SUMMARY|$)/;\n\n        const claimsec = claimregex.exec(text);\n\n        if (claimsec) {\n          const claimsection = claimsec[1];\n          const linesa = claimsection\n            .split(/(?<=\\.)\\s+/)\n            .filter((line) => line.includes(\".\"));\n          const filteredLines = linesa.filter(\n            (line) =>\n              line.trim().length >= 40 &&\n              !/^\\s*[\\d\\n\\t\\s]+\\.?$|^:\\s*\\n{1,10}CLAIMS\\s*\\n{1,10}1\\./.test(\n                line\n              )\n          );\n\n          console.log(\"claims\", linesa);\n          console.log(\"claims1\", filteredLines);\n\n          let independentClaimCount = 0;\n          let dependentClaimCount = 0;\n          const independentClaims = [];\n          const dependentClaims = [];\n\n          for (let i = 0; i < filteredLines.length; i++) {\n            const line = filteredLines[i];\n            const words = line.split(/\\s+/).filter(Boolean);\n            const wordCount = words.length;\n            if (/claim\\s+(\\d+)/i.test(line)) {\n              dependentClaims.push(`claim ${i + 1} - ${wordCount} words`);\n              dependentClaimCount++;\n            } else {\n              independentClaims.push(`claim ${i + 1} - ${wordCount} words`);\n              independentClaimCount++;\n            }\n          }\n\n          setTotal(filteredLines.length);\n          setIndependent(independentClaimCount);\n          setdependent(dependentClaimCount);\n          setIndependentClaimLists(independentClaims.join(\"\\n\"));\n          setDependentClaimLists(dependentClaims.join(\"\\n \"));\n\n          const filteredContentforClaimSection = claimsection.replace(\n            /\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\n            \"\"\n          );\n\n          const wordsForDetClaim = filteredContentforClaimSection\n            .split(/\\s+/)\n            .filter(Boolean);\n          const claimWordCount = wordsForDetClaim.length;\n          setClaimedWord(claimWordCount);\n          console.log(\"claim\", claimWordCount);\n        }\n\n        const abstractregex =\n          /(?: Abstract|ABSTRACT)([\\s\\S]*?)(?:What is claimed is|Claims|CLAIMS|CROSS-REFERENCE |cross-reference to related application|field|background|summary|description of the drawing|$)/;\n\n        const abssec = abstractregex.exec(text);\n        if (abssec) {\n          const abssection = abssec[1];\n          const filteredContentforAbstractSection = abssection.replace(\n            /\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\n            \"\"\n          );\n          const wordsForDetAbs = filteredContentforAbstractSection\n            .split(/\\s+/)\n            .filter(Boolean);\n          const absWordCount = wordsForDetAbs.length;\n\n          setAbstractWord(absWordCount);\n          console.log(\"abs\", absWordCount);\n        }\n\n        const figRegex =\n          /(?:Description of(?: the)? Drawings|DESCRIPTION OF(?: THE)? DRAWINGS)([\\s\\S]*?)(?:DETAILED DESCRIPTION|\\nDetailed Description|DESCRIPTION OF EMBODIMENTS|DESCRIPTION OF IMPLEMENTATIONS|DETAILED DESCRIPTION OF SPECIFIC EMBODIMENTS|What is claimed is|CLAIMS|ABSTRACT|CROSS-REFERENCE TO RELATED APPLICATION|FIELD|BACKGROUND|SUMMARY|BRIEF DESCRIPTION THE INVENTION|$)/;\n        const descriptionMatches = figRegex.exec(text);\n        debugger;\n        if (descriptionMatches) {\n          const descriptionText = descriptionMatches[1];\n          const imageRegex1 =\n            /(?:FIG(?:URE)?)\\.?[-\\s]?(?:\\d+|[IVXLCDM]+)[A-Z]?(?:\\([\\w\\s]+\\))?\\b/gi;\n          const matches = descriptionText.match(imageRegex1);\n          const uniqueMatches = [...new Set(matches)];\n          const matchesWithoutanyWord = uniqueMatches.filter(\n            (match) =>\n              !/\\bfigured\\b/i.test(match) && !/\\bfiguring\\b/i.test(match)\n          );\n\n          const Rx1 = matchesWithoutanyWord.length;\n          const figsRomanRegex =\n            /FIGS(?:URES?)?\\.\\s(?:\\d+|[IVXLCDM]+)(?:[A-Za-z]?(?:\\sAND\\s(?:\\d+|[IVXLCDM]+)[A-Za-z]?)+)?/i;\n\n          const matches2 = descriptionText.match(figsRomanRegex);\n          const unique = [...new Set(matches2)];\n          console.log(\"aaa\", unique);\n          const Rx2 = unique.length * 2;\n          const totalFigs = Rx1 + Rx2;\n          setImgCount(totalFigs);\n\n          const imageRegex =\n            /FIGS\\.\\s?\\d+([A-Za-z\\(\\)]+)?\\s?(?:to(?!.*and)|-(?!.*and))\\s?\\d+([A-Za-z\\(\\)]+)?/gi; //without and\n          debugger;\n          const matches1 = descriptionText.match(imageRegex);\n          const uniqueMatches1 = [...new Set(matches1)];\n          console.log(\"jii\", uniqueMatches1);\n        }\n        setFileContent(text);\n        setSentenceCount(text.split(\".\").length);\n        setLineCount(text.split(\"\\n\").length);\n        const a = text.split(\"\\n\");\n        setLineCount(a.length);\n        setErrorMessage(\"\");\n      } catch (error) {\n        setErrorMessage(\"Error reading the .docx file.\");\n      }\n    };\n\n    reader.onerror = () => {\n      setErrorMessage(\"Error reading the file.\");\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  return (\n    <div className=\"App\">\n      <div\n        style={{\n          letterSpacing: 0,\n          top: 0,\n          width: \"100%\",\n          backgroundColor: \"\",\n          color: \"white\",\n          padding: \"20px\",\n          textAlign: \"center\",\n        }}\n      >\n        <h1>Patent Reader</h1>\n      </div>\n      <input type=\"file\" onChange={handleFileChange} />\n      {errorMessage && <p className=\"error\">{errorMessage}</p>}\n      <div className=\"result\">\n        <p>Title: {modifiedTitle}</p>\n        <p> Count of the Title :{wordCount}</p>\n      </div>\n\n      <div className=\"result\">\n        <p>Cross-Reference Section: {crossWord}</p>\n        <p>Field Section:{fieldWord}</p>\n        <p>Background Section:{backgroundWord}</p>\n        <p>Summary Section : {summaryWord}</p>\n        <p>Description of Drawing : {drofDraWord}</p>\n        <p> Detailed Description : {detaDesWord}</p>\n        <p>Claims Section :{claimedWord}</p>\n        <p>Abstract Section : {abstractWord}</p>\n        <p>Total Number of Figures:{imgCount}</p>\n        <p>Total lines: {lineCount}</p>\n        <p>\n          Total word count: {fileContent.split(/\\s+/).filter(Boolean).length}\n        </p>\n        <p>Total character count: {fileContent.replace(/\\s/g, \"\").length}</p>\n        <p>Total sentence count: {sentenceCount}</p>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          marginTop: \"2%\",\n        }}\n      >\n        <div>\n          <button onClick={() => setShowFileContent(!showFileContent)}>\n            {showFileContent ? \"hide\" : \"view\"} content\n          </button>\n        </div>\n        <div>\n          <button onClick={() => setShowClaimContent(!showClaimContent)}>\n            {showClaimContent ? \"hide\" : \"view\"} Claims\n          </button>\n        </div>\n      </div>\n\n      {showFileContent && (\n        <div className=\"file-content\" style={{ textAlign: \"center\" }}>\n          <h2 style={{ color: \"white\" }}>File Content : {\"  \" + fileName}</h2>\n          <p\n            style={{\n              whiteSpace: \"pre-wrap\",\n              textAlign: \"left\",\n              backgroundColor: \"white\",\n              margin: \"0\",\n            }}\n          >\n            {fileContent\n              .split(\"\\n\")\n              .reduce((acc, line) => {\n                const trimmedLine = line.trim();\n                const modifiedLine = trimmedLine.replace(\n                  /\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\n                  \"\"\n                );\n                if (modifiedLine) {\n                  acc.push(modifiedLine);\n                } else if (!acc[acc.length - 1]) {\n                  return acc;\n                } else {\n                  acc.push(\"\");\n                }\n                return acc;\n              }, [])\n              .join(\"\\n\")}\n          </p>\n        </div>\n      )}\n\n      {showClaimContent && (\n        <div className=\"claim-content\">\n          <h2>CLAIMS:</h2>\n          <p>Total Claims:{total}</p>\n          <p>Independent Claims:{independent}</p>\n          <p>Dependent Claims:{dependent}</p>\n          <p>\n            <b>Independent Claims List:</b>\n          </p>\n          <pre>{independentClaimLists}</pre>\n          <p>\n            <b>Dependent Claims:</b>\n          </p>\n          <pre>{dependentClaimLists}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}